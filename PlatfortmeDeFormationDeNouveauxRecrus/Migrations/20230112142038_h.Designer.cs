// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlatfortmeDeFormationDeNouveauxRecrus.DataBase;

#nullable disable

namespace PlatfortmeDeFormationDeNouveauxRecrus.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230112142038_h")]
    partial class h
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Departement", b =>
                {
                    b.Property<int>("Departement_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Departement_id"));

                    b.Property<string>("DepartementName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Departement_id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Document", b =>
                {
                    b.Property<int>("Document_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Document_id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PieceJointe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ProjectIdProject")
                        .HasColumnType("bigint");

                    b.HasKey("Document_id");

                    b.HasIndex("ProjectIdProject");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Project", b =>
                {
                    b.Property<long>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdProject"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("IdProject");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.UserManagement.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Formatteur"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Participant"
                        });
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.UserManagement.Entities.User", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("User_id"));

                    b.Property<int>("Departement_id")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("User_id");

                    b.HasIndex("Departement_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.Property<int>("UsersUser_id")
                        .HasColumnType("integer");

                    b.HasKey("RolesId", "UsersUser_id");

                    b.HasIndex("UsersUser_id");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Document", b =>
                {
                    b.HasOne("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Project", "Project")
                        .WithMany("Documents")
                        .HasForeignKey("ProjectIdProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.UserManagement.Entities.User", b =>
                {
                    b.HasOne("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Departement", "Departement")
                        .WithMany("Users")
                        .HasForeignKey("Departement_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("PlatfortmeDeFormationDeNouveauxRecrus.UserManagement.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlatfortmeDeFormationDeNouveauxRecrus.UserManagement.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Departement", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PlatfortmeDeFormationDeNouveauxRecrus.DepartementManagement.Entities.Project", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
